package br.com.listas;

import java.security.cert.CollectionCertStoreParameters;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.*;

public class Curso {

	public Curso(String nome, String instrutor) {
		this.nome = nome;
		this.instrutor = instrutor;
	}

	private String nome;
	private String instrutor;
	/* A ideia de usar sempre o List, a gente encapsula tudo (é como se fosse o
	/ IList do .Net)*
	 ArrayList é mais performático, mas tem um problema para manipulação do meio, faz várias coisas na memória
	 LinkedList é mais performático em manipulação, porém é muito lenta para pegar um elemento*/
	private List<Aula> aulas = new LinkedList<Aula>();
	
	private int tempoTotal;

	public String getNome() {
		return nome;
	}

	public String getInstrutor() {
		return instrutor;
	}

	public List<Aula> getAulas() {
		return Collections.unmodifiableList(aulas);
	}
	
	public void adiciona(Aula aula) {
		this.aulas.add(aula);
	}
	
	public int getTempoTotal() {
		int tempoTotal = 0;
		
		for (Aula aula : aulas) {
			tempoTotal += aula.getTempo();
		}
		
		return tempoTotal;
	}

}
